---
title: Demo of sourcing an Python function from a script
jupyter: python3
format: 
    html:
        toc: true
        toc-depth: 2
editor: source
---


Here we demonstrate how we can use the `import` reserved word 
to read in a function 
stored in another Python script contained within this repository. 
The function in the file `../src/count_classes.py` is named `count_classes` 
(it doesn't have to have the same name as the file, 
but it often makes sense to do this), 
and importing the file allows us to access the function in this notebook. 
We will demonstrate using it below to calculate the number of observations 
in each class of a data set.


```{python}
import pandas as pd
import sys
import os

# Import the count_classes function from the src folder
sys.path.append('..')
from src.count_classes import count_classes
```

Here's some data 
(the Wisconsin Breast Cancer data set, 
originally from the 
[UCI machine learning repository](https://archive-beta.ics.uci.edu/ml/datasets/breast+cancer+wisconsin+diagnostic)) 
where we would like to calculate the number of observations in each class:

```{python}
cancer = pd.read_csv("https://raw.githubusercontent.com/UBC-DSCI/introduction-to-datascience/main/data/wdbc.csv")
cancer
```

To calculate the number observations of each class, 
we will use the `count_classes` function 
from the `../src/count_classes.py` file 
that we sourced in the first code cell of this notebook:

```{python}
count_classes(cancer, 'Class')
```

Ta da! 
Now isn't that easier to read for a human trying to understand the analysis, 
compared to if we included the source code for that function in this notebook?
